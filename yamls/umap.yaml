id: UMAP-{VER}
meta:
  title: UMAP {VER}
  subtitle: >
    A dimension reduction technique that can be used for visualisation similarly to t-SNE
  description: >
    Uniform Manifold Approximation and Projection (UMAP) is a dimension reduction technique that can be used for
    visualisation similarly to t-SNE, but also for general non-linear dimension reduction. The algorithm is founded on
    three assumptions about the data

      * The data is uniformly distributed on a Riemannian manifold;
      * The Riemannian metric is locally constant (or can be approximated as such);
      * The manifold is locally connected.

    From these assumptions it is possible to model the manifold with a fuzzy topological structure. The embedding is
    found by searching for a low dimensional projection of the data that has the closest possible equivalent fuzzy
    topological structure.

    The details for the underlying mathematics can be found in [McInnes, L, Healy, J, and Melville, J](https://arxiv.org/abs/1802.03426).

    DensMAP has been added (https://www.biorxiv.org/content/10.1101/2020.05.12.077776v1).
endpoints:
  backend:
    cmd: python ./run_umap.py
    type: docker
    image: {GBOX}
frontend:
  args:
    - injectInto: n_neighbors
      type: number
      label: Number of neighbors (n_neighbors, an integer)
      description: >-
        This parameter controls how UMAP balances local versus global structure in the data. It does this by
        constraining the size of the local neighborhood UMAP will look at when attempting to learn the manifold
        structure of the data. This means that low values of `n_neighbors` will force UMAP to concentrate on very local
        structure (potentially to the detriment of the big picture), while large values will push UMAP to look at larger
        neighborhoods of each point when estimating the manifold structure of the data, losing fine detail structure for
        the sake of getting the broader of the data.
      default: 15
    - injectInto: min_dist
      type: number
      label: Minimum distance (min_dist, a real number ranges from 0 to 1)
      description: >-
        The `min_dist` parameter controls how tightly UMAP is allowed to pack points together. It, quite literally,
        provides the minimum distance apart that points are allowed to be in the low dimensional representation. This
        means that low values of `min_dist` will result in clumpier embeddings. This can be useful if you are interested
        in clustering, or in finer topological structure. Larger values of `min_dist` will prevent UMAP from packing
        point together and will focus instead on the preservation of the broad topological structure instead.
      default: 0.1
      step: 0.000000000001
    - injectInto: dens_lambda
      type: number
      label: Value for densmap if desired (Default is -1.0 or not used, use a value above 0.0 to activate)
      description: >-
        If you would like to apply densmap, then you should set dens_lambda to a larger value.
      default: -1.0
      step: 0.1
    - type: seed
      injectInto: random_seed
      label: Random seed
      description: >-
        The UMAP process is stochastic and as such requires a seed to reproduce the same UMAP.
      default: 13513
    - injectInto: metric
      type: select
      label: Metric (metric)
      description: >-
        This parameter controls how distance is computed in the ambient space of the input data.
      choices:
        - value: euclidean
          label: Euclidean
        - value: manhattan
          label: Manhattan
        - value: chebyshev
          label: Chebyshev
        - value: minkowski
          label: Minkowski

        - value: canberra
          label: Canberra
        - value: braycurtis
          label: Braycurtis
        - value: haversine
          label: Haversine

        - value: mahalanobis
          label: Mahalanobis
        - value: wminkowski
          label: Wminkowski
        - value: seuclidean
          label: Seuclidean

        - value: cosine
          label: Cosine
        - value: correlation
          label: Correlation

        - value: hamming
          label: Hamming
        - value: jaccard
          label: Jaccard
        - value: dice
          label: Dice
        - value: russellrao
          label: Russellrao
        - value: kulsinski
          label: Kulsinski
        - value: rogerstanimoto
          label: Rogerstanimoto
        - value: sokalmichener
          label: Sokalmichener
        - value: sokalsneath
          label: Sokalsneath
        - value: yule
          label: Yule

      default: euclidean
    - type: checkbox
      label: Use a parametric model (fits with tensorflow)
      default: false
      injectInto: whether_parametric
    - type: number
      injectInto: n_epochs
      label: Number of epochs (default is 50)
      description: >-
        The Parametric UMAP uses a neural network to train on the data. Set this value to the number of epochs desired.
      default: 50
    - type: text
      injectInto: eval_along_line
      label: Points to evaluate along, for example (0, 0), (1, 1) to evaluate starting at (0, 0) and ending at (1, 1)
      description: >-
        Variation of genes will be plotted along this line looking at the top 10 variable genes
      default: ""
    - type: text
      injectInto: coord_name
      label: Name of coordinates (default is UMAP coordinates)
      description: >-
        In order to know the different UMAP coordinates generated it is important to name them in each gbox.
      default: "UMAP coordinates"
#  exports:
#    - kind: sampleCoords
#      extractFrom: UMAP coordinates
  imports:
    - kind: assay
      label: Assay
      injectInto: assay
